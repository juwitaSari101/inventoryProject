/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.Point;
import view.Master_Pengguna;
import view.Transaksi_Pemesanan;
import view.Transaksi_Barangmasuk;
import view.Transaksi_Barangkeluar;
import view.Master_Distributor;
import view.Master_Barang;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import model.Model_Login;
import view.Form_Login;

/**
 *
 * @author juwita
 */
public class Menu_Utama extends javax.swing.JFrame {

    private Timer timer;
    private Model_Login modelLogin;

    /**
     * Creates new form Menu_Utama
     */
    public Menu_Utama(String Id, String Nama, String Level2) {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        // Inisialisasi modelLogin dengan parameter yang diterima
        modelLogin = new Model_Login();
        modelLogin.setId_user(Id);
        modelLogin.setUsername(Nama);
        modelLogin.setLevel(Level2);

        // Atur teks label berdasarkan data dari modelLogin
        lb_nama.setText(modelLogin.getUsername());
        lb_level.setText(modelLogin.getLevel());
        lb_Id.setText(modelLogin.getId_user());
        //lb_Id.setVisible(false);
        execute();
        Date();
    }

    private void Date() {
        Date TanggalSekarang = new Date();
        SimpleDateFormat TanggalWaktu = new SimpleDateFormat("yyy-MM-dd HH:mm:ss");
        String tanggal = TanggalWaktu.format(TanggalSekarang);
        lb_tanggal.setText(tanggal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_navbar = new javax.swing.JPanel();
        lb_tanggal = new javax.swing.JLabel();
        lb_Id = new javax.swing.JLabel();
        pn_sidebar = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        pn_menu = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lb_nama = new javax.swing.JLabel();
        lb_level = new javax.swing.JLabel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_navbar.setBackground(new java.awt.Color(0, 102, 255));
        pn_navbar.setPreferredSize(new java.awt.Dimension(872, 70));

        lb_tanggal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lb_tanggal.setForeground(new java.awt.Color(255, 255, 255));
        lb_tanggal.setText("Tanngal dan Waktu");

        lb_Id.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lb_Id.setForeground(new java.awt.Color(255, 255, 255));
        lb_Id.setText("ID");

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addContainerGap(464, Short.MAX_VALUE)
                .addComponent(lb_Id)
                .addGap(89, 89, 89)
                .addComponent(lb_tanggal)
                .addGap(96, 96, 96))
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_tanggal)
                    .addComponent(lb_Id))
                .addContainerGap())
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(250, 495));

        jScrollPane.setBorder(null);

        pn_menu.setBackground(new java.awt.Color(255, 255, 255));
        pn_menu.setLayout(new javax.swing.BoxLayout(pn_menu, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane.setViewportView(pn_menu);

        lb_nama.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lb_nama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_nama.setText("Nama");

        lb_level.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lb_level.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_level.setText("Level");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_nama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_level, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_nama)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_level)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_sidebarLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_content.setBackground(new java.awt.Color(204, 204, 204));

        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(798, 547));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pn_utama.add(new content_bg());
        pn_utama.repaint();
        pn_utama.revalidate();

    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_Utama("id", "Nama", "Level").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lb_Id;
    private javax.swing.JLabel lb_level;
    private javax.swing.JLabel lb_nama;
    private javax.swing.JLabel lb_tanggal;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        // Icon untuk menu
        ImageIcon iconBarang = new ImageIcon(getClass().getResource("/img/barang.png"));
        ImageIcon iconBarangMasuk = new ImageIcon(getClass().getResource("/img/barangmasuk.png"));
        ImageIcon iconBarangKeluar = new ImageIcon(getClass().getResource("/img/barangkeluar.png"));
        ImageIcon iconDistributor = new ImageIcon(getClass().getResource("/img/distributor.png"));
        ImageIcon iconUser = new ImageIcon(getClass().getResource("/img/user.png"));
        ImageIcon iconPemesanan = new ImageIcon(getClass().getResource("/img/pemesanan.png"));
        ImageIcon iconHome = new ImageIcon(getClass().getResource("/img/home.png"));
        ImageIcon iconLogout = new ImageIcon(getClass().getResource("/img/logout.png"));
        ImageIcon iconMaster = new ImageIcon(getClass().getResource("/img/master.png"));
        ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/img/transaksi.png"));

        // Ambil level pengguna
        String level = modelLogin.getLevel();

        if ("Owner".equalsIgnoreCase(level)) {
            // Menu Owner
            MenuItem masBarang = createMenuItem(iconBarang, "Barang", new Master_Barang());
            MenuItem masDistributor = createMenuItem(iconDistributor, "Distributor", new Master_Distributor());
            MenuItem masUser = createMenuItem(iconUser, "User", new Master_Pengguna());

            MenuItem tranBarangMasuk = createMenuItem(iconBarangMasuk, "Barang Masuk", new Transaksi_Barangmasuk());
            MenuItem tranBarangKeluar = createMenuItem(iconBarangKeluar, "Barang Keluar", new Transaksi_Barangkeluar());
            MenuItem tranPemesanan = createMenuItem(iconPemesanan, "Pemesanan", new Transaksi_Pemesanan());

            MenuItem menuHome = new MenuItem(iconHome, false, null, "Home", new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    pn_utama.removeAll();
                    pn_utama.add(new content_bg());
                    pn_utama.repaint();
                    pn_utama.revalidate();
                }
            });

            MenuItem menuLogout = createLogoutMenu(iconLogout);

            MenuItem menuMaster = new MenuItem(iconMaster, false, null, "Master", null, masBarang, masDistributor, masUser);
            MenuItem menuTransaksi = new MenuItem(iconTransaksi, false, null, "Transaksi", null, tranBarangMasuk, tranBarangKeluar, tranPemesanan);

            addMenu(menuHome, menuMaster, menuTransaksi, menuLogout);
        } else {
            // Menu Staf
            MenuItem menuHome = createMenuItem(iconHome, "Home", new content_bg());
            MenuItem masBarang = createMenuItem(iconBarang, "Barang", new Master_Barang());
            MenuItem masBarangMasuk = createMenuItem(iconBarangMasuk, "Barang Masuk", new Transaksi_Barangmasuk());
            MenuItem masBarangKeluar = createMenuItem(iconBarangKeluar, "Barang Keluar", new Transaksi_Barangkeluar());
            MenuItem masLogout = createLogoutMenu(iconLogout);

            pn_menu.add(menuHome);
            pn_menu.add(masBarang);
            pn_menu.add(masBarangMasuk);
            pn_menu.add(masBarangKeluar);
            pn_menu.add(masLogout);
        }

        // Refresh panel menu
        pn_menu.revalidate();
        pn_menu.repaint();
    }

    private MenuItem createMenuItem(ImageIcon icon, String title, JPanel panel) {
        return new MenuItem(null, true, icon, title, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(panel);
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
    }

    private MenuItem createLogoutMenu(ImageIcon icon) {
        return new MenuItem(icon, false, null, "Logout", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Tampilkan konfirmasi logout
                int response = JOptionPane.showConfirmDialog(
                        null,
                        "Apakah Anda yakin ingin keluar?",
                        "Konfirmasi Logout",
                        JOptionPane.YES_NO_OPTION
                );

                if (response == JOptionPane.YES_OPTION) {
                    // Kembali ke form login
                    Form_Login loginForm = new Form_Login();
                    loginForm.setVisible(true);

                    // Tutup frame utama
                    JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(pn_utama);
                    if (topFrame != null) {
                        topFrame.dispose();
                    }
                }
            }
        });
    }

    private void addMenu(MenuItem... menu) {
        for (int i = 0; i < menu.length; i++) {
            pn_menu.add(menu[i]);
            ArrayList<MenuItem> subMenu = menu[i].getSubMenu();
            for (MenuItem m : subMenu) {
                addMenu(m);
            }
        }
        pn_menu.revalidate();
    }

}
